; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = A smart Wi-Fi enabled fan controller with environmental sensing and remote control capabilities.

[env:esp32_fancontrol]
debug_port = /dev/ttyUSB0
debug_speed = 115200
test_port = /dev/ttyUSB0
test_speed = 115200
test_build_src = yes
; --- Upload Options ---
; To Upload via OTA (Over-The-Air) uncomment the following two lines:
; upload_protocol = espota
; upload_port = YOUR_ESP32_IP_ADDRESS_OR_MDNS ; Set your device IP or mDNS name (e.g., fancontrol-aabbccddeeff.local)
; To Upload via USB (Serial), ensure 'upload_protocol' is commented out or not present.
; PlatformIO will then use the default esptool.
upload_speed = 115200 ; This speed applies to serial uploads
monitor_speed = 115200
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = 
	esp32async/ESPAsyncWebServer @ ^3.7.7
	esp32async/AsyncTCP @ ^3.4.2
  ayushsharma82/ElegantOTA @ ^3.1.0
	links2004/WebSockets @ ^2.6.1
	adafruit/Adafruit BMP280 Library @ ^2.6.8
	adafruit/Adafruit Unified Sensor @ ^1.1.15
	iakop/LiquidCrystal_I2C_ESP32 @ ^1.1.6
	bblanchon/ArduinoJson @ ^7.4.1
	knolleary/PubSubClient @ ^2.8

; Build flags
build_flags =
    ;-DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE ; More detailed logging, can be reduced for production
    -DELEGANTOTA_USE_ASYNC_WEBSERVER=1 ; Enable Async mode for ElegantOTA

; Filesystem image options for SPIFFS
board_build.filesystem = spiffs
; Custom partition table for OTA
; For the 8MB Module use partitions_8MB.csv
board_build.partitions = partitions_4MB.csv
