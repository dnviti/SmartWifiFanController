# .github/workflows/ci_build_test.yml
name: CI Build & Test

on:
  push:
    branches:
      - main
      - develop
      # Trigger on push to specific AI-generated branch patterns
      - 'bugfix/ai-issue-*'
      - 'feature/ai-issue-*'
      - 'docs/ai-issue-*'
      - 'refactor/ai-issue-*'
      - 'fix/ai-issue-*'
      # Broader GitFlow patterns for other development branches
      - 'bugfix/**'
      - 'feature/**'
      - 'docs/**'
      - 'refactor/**'
      - 'fix/**'
      - 'ai-fix/**' # A more generic catch-all if specific prefixes are missed
  pull_request:
    types: [opened, synchronize, reopened] 
    branches:
      - develop # Run for ANY PR targeting 'develop'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build_and_test:
    # Conditional execution for the job:
    if: |
      (github.event_name == 'push' && (
        github.ref == 'refs/heads/main' ||
        github.ref == 'refs/heads/develop' ||
        startsWith(github.ref, 'refs/heads/bugfix/ai-issue-') ||
        startsWith(github.ref, 'refs/heads/feature/ai-issue-') ||
        startsWith(github.ref, 'refs/heads/docs/ai-issue-') ||
        startsWith(github.ref, 'refs/heads/refactor/ai-issue-') ||
        startsWith(github.ref, 'refs/heads/fix/ai-issue-') ||
        # Also cover the broader GitFlow patterns for pushes
        startsWith(github.ref, 'refs/heads/bugfix/') ||  # Note: This will include ai-issue branches too
        startsWith(github.ref, 'refs/heads/feature/') || # Note: This will include ai-issue branches too
        startsWith(github.ref, 'refs/heads/docs/') ||    # Note: This will include ai-issue branches too
        startsWith(github.ref, 'refs/heads/refactor/') ||# Note: This will include ai-issue branches too
        startsWith(github.ref, 'refs/heads/fix/') ||     # Note: This will include ai-issue branches too
        startsWith(github.ref, 'refs/heads/ai-fix/')     # Ensures generic ai-fix prefix is caught
      )) ||
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'pull_request' &&
        github.base_ref == 'develop' 
        # Runs for all PRs targeting develop, as per your last request
      )
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive' 

      - name: Set up Python for PlatformIO
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' 

      - name: Install PlatformIO Core
        run: pip install -U platformio

      - name: Cache PlatformIO data
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio/packages
            ~/.platformio/platforms
            ~/.platformio/.cache 
          key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}-${{ hashFiles('**/lockfiles') }} 
          restore-keys: |
            ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}-
            ${{ runner.os }}-platformio-

      - name: Set Build Environment Name
        run: echo "PIO_ENV_NAME=esp32_fancontrol" >> $GITHUB_ENV

      - name: Compile Firmware
        run: platformio run -e ${{ env.PIO_ENV_NAME }}
        env:
          PLATFORMIO_CI_SRC: ${{ github.workspace }}

      - name: Run Unit Tests
        run: platformio test -e ${{ env.PIO_ENV_NAME }}
        env:
          PLATFORMIO_CI_SRC: ${{ github.workspace }}

      - name: Build Filesystem Image (SPIFFS)
        run: platformio run -e ${{ env.PIO_ENV_NAME }} --target buildfs
        env:
          PLATFORMIO_CI_SRC: ${{ github.workspace }}
